// ======================================
// Media Queries
// ======================================

$breakpoints: (
  'mobile'         : ( min-width: 480px  ),
  'mobile-plus'    : ( min-width: 640px  ),
  'ipad-portrait'  : ( min-width: 769px  ),
  'nav'            : ( min-width: 769px  ),
  'ipad-landscape' : ( min-width: 1024px ),
  'mbp-thirteen'   : ( min-width: 1280px ),
  'mbp-fifteen'    : ( min-width: 1440px ),
  'mac'            : ( min-width: 1920px ),
  'retina'         : ( min-width: 2880px )
);

@mixin respond-to($name) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $name) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  }
  // If the key doesnt exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

// ======================================
// Fonts
// ======================================

@mixin font-normal() {
  font-stretch: normal;
}
@mixin font-primary() {
  font-family: $primary;
  @include font-normal();
}
@mixin font-secondary() {
  font-family: $secondary;
  @include font-normal();
}
@mixin font-tertiary() {
  font-family: $tertiary;
  @include font-normal();
}

// ======================================
// Fonts
// ======================================

@mixin p() {
  @include font-secondary();
  font-size: rem-calc($body);
  line-height: 1.5;
  letter-spacing: 0.04rem;
}
@mixin a() {
  @include font-secondary();
  display: inline;
  font-size: rem-calc($body);
  text-decoration: none;
  color: $black;
  letter-spacing: 0.04rem;
}
@mixin h1() {
  @include font-primary();
  font-size: 35px;
  line-height: 1.18;
  text-transform: uppercase;
  letter-spacing: 0.04rem;
  font-weight: 500;
  @include respond-to(ipad-portrait) {
    font-size: rem-calc($h1);
  }
}
@mixin h2() {
  @include font-primary();
  font-size: rem-calc($h2);
  line-height: rem-calc(37px);
  color: $white;
  font-weight: 400;
  letter-spacing: 0.02rem;
}
@mixin h3() {
  @include font-tertiary();
  font-size: rem-calc($h3);
  color: $red;
  letter-spacing: 0.28rem;
  text-transform: uppercase;
  font-weight: 900;
}

@mixin h4() {
  @include font-tertiary();
  font-size: rem-calc($h4);
  color: $black;
  letter-spacing: 0.14rem;
  text-transform: uppercase;
  font-weight: 900;
  .hero--header & {
    color: $white;
    letter-spacing: 0.48rem;
  }
}

@mixin h5() {
  @include font-tertiary();
  font-size: rem-calc($h5);
  color: $white;
  letter-spacing: 0.48rem;
  text-transform: uppercase;
  font-weight: 900;
}

@mixin h6() {
  @include font-tertiary();
  font-size: rem-calc($h6);
  letter-spacing: 0.14rem;
  text-transform: uppercase;
  font-weight: 900;
}


@mixin quote() {
  @include font-tertiary();
  font-size: rem-calc(95px);
  color: $red;
  letter-spacing: 0.14em;
  text-transform: uppercase;
  font-weight: 900;
  line-height: .55;
}

@mixin button() {
  @include font-tertiary();
  display: inline-block;
  width: rem-calc(190px);
  padding: rem-calc(24px) rem-calc(10px);
  background-color: $red;
  font-size: $small;
  color: $white;
  letter-spacing: 0.28rem;
  cursor: pointer;
}

@mixin hero($height) {
  position: relative;
  width: 100%;
  height: $height;
  padding-left: 32px;
  padding-right: 32px;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  text-align: center;
}

// ======================================================
// Floats - Hey, how about, don't use floats for layout
// ======================================================

@mixin clearfix() {
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin calc($property, $expression) {
  #{$property}: calc(#{$expression});
}

// ======================================
// Alignment
// ======================================

@mixin center() {
  margin-left: auto;
  margin-right: auto;
}

@mixin left() {
  margin-right: auto;
}

@mixin right() {
  margin-left: auto;
}
